sudo: required
services:
  - docker

# Build a test version (using the dev dockerfile) and run tests.
before_install:
  - docker build -t act7mathcs/react-test -f ./client/Dockerfile.dev ./client

# If any of these scripts exit with a status code other than 0, Travis CI will assume our build failed.
script:
  # We run the test script and then make sure it exits the test process.
  - docker run act7mathcs/react-test npm run test -- --coverage

# After the test passes, we build a production version of all of our apps. The image name we give each build is the name of the project. The build context is the relative name of the folder that contains the Dockerfile (so it isn't just ., since the Dockerfiles are in subfolders).
# After building each image, we push them to Dockerhub. Before doing this, we have to log into docker CLI (the id and password are saved as environment variables in Travis CI settings for this repo).
after_success:
  - docker build -t act7mathcs/multi-client ./client
  - docker build -t act7mathcs/multi-nginx ./nginx
  - docker build -t act7mathcs/multi-server ./server
  - docker build -t act7mathcs/multi-worker ./worker
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker push act7mathcs/multi-client
  - docker push act7mathcs/multi-nginx
  - docker push act7mathcs/multi-server
  - docker push act7mathcs/multi-worker

# We created a IAM user in AWS with Elastic Beanstalk privileges, and pasted the AWS keys to Travis CI so it can perform the below deploy.
deploy:
  provider: elasticbeanstalk
  region: us-west-1
  app: multi-docker
  env: MultiDocker-evn
  bucket_name: elasticbeanstalk-us-west-1-834022607075
  bucket_path: multi-docker
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY

